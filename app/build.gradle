plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "kotlin-parcelize"
    id "kotlin-kapt"
    id 'dagger.hilt.android.plugin'
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.awesome.weatherapp"
        minSdk 22
        targetSdk 31
        versionCode 1
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            shrinkResources false
            resValue "string", "app_version", "v${defaultConfig.versionName}"
            buildConfigField "String", "BASE_API_URL", localProperties.getProperty("baseUrl")
            buildConfigField "String", "OPEN_WEATHER_APP_ID", localProperties.getProperty("appid")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Weather Forecast.${versionName}.apk"
                }
            }
        }
        release {
            minifyEnabled true
            debuggable false
            shrinkResources false
            resValue "string", "app_version", "v${defaultConfig.versionName}"
            buildConfigField "String", "BASE_API_URL", localProperties.getProperty("baseUrl")
            buildConfigField "String", "OPEN_WEATHER_APP_ID", localProperties.getProperty("appid")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Weather Forecast.${versionName}.apk"
                }
            }
        }
    }
    flavorDimensions "version"
    productFlavors {
        dev {
            dimension "version"
            versionNameSuffix "- dev"
            resValue "string", "app_name", "Weather Forecast"
            applicationId "com.awesome.weatherapp.dev"
        }
        prod {
            dimension "version"
            resValue "string", "app_name", "Weather Forecast"
            applicationId "com.awesome.weatherapp.prod"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'


    // room
    implementation "androidx.room:room-runtime:$version_room_db"
    kapt "androidx.room:room-compiler:$version_room_db"

    //--------------------------Lottie Amazing Animations ------------------------------------
    implementation 'com.airbnb.android:lottie:4.2.2'
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Retrofit for networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$version_retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$httplogging_version"
    implementation "com.google.code.gson:gson:$json_version"

    // Hilt DI
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}